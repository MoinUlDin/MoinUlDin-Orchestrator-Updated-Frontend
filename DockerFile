# Stage: Serve the prebuilt Vite app with Nginx
FROM nginx:alpine

# Remove default Nginx configuration
RUN rm /etc/nginx/conf.d/default.conf

# Copy the locally built dist folder
COPY dist/ /usr/share/nginx/html

# Copy the custom Nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Ensure permissions are set correctly
RUN chmod -R 755 /usr/share/nginx/html

# Expose port 80
EXPOSE 80

# Run Nginx
CMD ["nginx", "-g", "daemon off;"]





# # Stage 1: Build the Vite app
# FROM node:18-alpine AS builder

# # Set the working directory inside the container
# WORKDIR /app

# # Copy package.json and package-lock.json (if available)
# COPY package*.json ./

# # Install dependencies with legacy peer dependencies and force flag, update browserslist database
# RUN npm install --legacy-peer-deps --force

# # Copy the rest of the application files
# COPY . .

# # Run the build command
# RUN npm run build

# # Stage 2: Serve the app with Nginx
# FROM nginx:alpine

# # Remove default Nginx configuration
# RUN rm /etc/nginx/conf.d/default.conf

# # Copy built files from the previous stage
# COPY --from=builder /app/dist /usr/share/nginx/html

# # Copy the custom Nginx configuration file
# COPY nginx.conf /etc/nginx/conf.d/default.conf

# # Ensure permissions are set correctly
# RUN chmod -R 755 /usr/share/nginx/html

# # Expose port 80 to the outside world
# EXPOSE 80

# # Set the command to start Nginx
# CMD ["nginx", "-g", "daemon off;"]


